/*
auto-generated by: https://github.com/react-spring/gltfjsx
author: LoÃ¯c Norgeot (https://sketchfab.com/norgeotloic)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/need-some-space-d6521362b37b48e3a82bce4911409303
title: Need some space?
*/

import * as THREE from "three";
import { draco } from "drei";
import React, { useRef, useLayoutEffect } from "react";
import { useLoader, useFrame } from "react-three-fiber";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";

export const centerObjectPosition = (object) =>
  new THREE.Box3()
    .setFromObject(object)
    .getCenter(object.position)
    .multiplyScalar(-1);

export default function Model(props) {
  const group = useRef();
  const originalXAxis = useRef();
  const shouldResetAnimation = useRef(false);
  const { nodes, materials } = useLoader(
    GLTFLoader,
    "/space/scene.gltf",
    draco()
  );

  useLayoutEffect(() => {
    centerObjectPosition(group.current);

    const spaceReset = setInterval(() => {
      shouldResetAnimation.current = true;
    }, 60000);

    return () => {
      if (spaceReset) clearInterval(spaceReset);
    };
  }, []);

  useFrame(({ camera }) => {
    if (!originalXAxis.current) {
      originalXAxis.current = camera.position.x;
    } else if (shouldResetAnimation.current) {
      shouldResetAnimation.current = false;
      camera.position.x = originalXAxis.current;
    } else {
      camera.position.x -= 0.1125;
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <points
          material={materials["Scene_-_Root"]}
          geometry={nodes.mesh_0.geometry}
        />
      </group>
    </group>
  );
}
